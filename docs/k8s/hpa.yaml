apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cqar-hpa
  namespace: cqar
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cqar
  minReplicas: 3
  maxReplicas: 10
  metrics:
  # CPU-based scaling
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  # Memory-based scaling
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom metric: gRPC request rate (requires custom metrics API)
  # - type: Pods
  #   pods:
  #     metric:
  #       name: grpc_requests_per_second
  #     target:
  #       type: AverageValue
  #       averageValue: "1000"
  
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # Wait 5 min before scaling down
      policies:
      - type: Percent
        value: 50  # Scale down max 50% at a time
        periodSeconds: 60
      - type: Pods
        value: 2  # Scale down max 2 pods at a time
        periodSeconds: 60
      selectPolicy: Min  # Use the policy that scales down the least
    scaleUp:
      stabilizationWindowSeconds: 0  # Scale up immediately
      policies:
      - type: Percent
        value: 100  # Scale up max 100% at a time
        periodSeconds: 30
      - type: Pods
        value: 4  # Scale up max 4 pods at a time
        periodSeconds: 30
      selectPolicy: Max  # Use the policy that scales up the most
