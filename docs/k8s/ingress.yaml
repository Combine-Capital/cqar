# Google Cloud Load Balancer for gRPC
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cqar-ingress
  namespace: cqar
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.allow-http: "false"
    # Enable HTTP/2 for gRPC
    cloud.google.com/backend-config: '{"default": "cqar-backend-config"}'
spec:
  rules:
  - host: cqar.combine-capital.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cqar-grpc
            port:
              number: 9090

---
# Backend configuration for Google Cloud Load Balancer
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: cqar-backend-config
  namespace: cqar
spec:
  # Health check configuration
  healthCheck:
    checkIntervalSec: 5
    timeoutSec: 3
    healthyThreshold: 2
    unhealthyThreshold: 2
    type: HTTP
    requestPath: /health/ready
    port: 8080
  
  # Connection draining timeout
  connectionDraining:
    drainingTimeoutSec: 30
  
  # Session affinity (optional, for connection reuse)
  sessionAffinity:
    affinityType: "CLIENT_IP"
    affinityCookieTtlSec: 3600

---
# Alternative: NGINX Ingress Controller
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: cqar-ingress-nginx
#   namespace: cqar
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
#     nginx.ingress.kubernetes.io/ssl-redirect: "true"
# spec:
#   tls:
#   - hosts:
#     - cqar.combine-capital.com
#     secretName: cqar-tls
#   rules:
#   - host: cqar.combine-capital.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: cqar-grpc
#             port:
#               number: 9090
